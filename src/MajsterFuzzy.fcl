FUNCTION_BLOCK move		// Block definition

VAR_INPUT
	distance : REAL;
	actionPoints : REAL;
	hitPoints : REAL;
	pPoints : REAL;
	woodPoints : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	priority : REAL;
END_VAR

FUZZIFY distance
	TERM close := (1, 1) (2, 1) (3, 0);
	TERM medium := (2, 0) (3, 1) (4, 1) (5, 0);
	TERM far := (4, 0) (5, 1) (6, 1);
END_FUZZIFY

FUZZIFY actionPoints
	TERM low := (0, 1) (1, 1) (2, 1) (3, 0);
	TERM high := (2.9,0) (3,1) (5,1) ;
END_FUZZIFY

FUZZIFY woodPoints
	TERM none := (-1, 0) (0, 1) (1, 0);
	TERM many := (0, 0) (1, 1) (2, 1);
END_FUZZIFY

DEFUZZIFY priority			// Defuzzify output variable 'tip'
	TERM low := (-1, 0) (0, 1) (2, 1) (3, 0);
	TERM medium := (2, 0) (3, 1) (4, 1) (5, 0);
	TERM high := (4, 0) (5, 1) (6, 1) (7, 0);
	TERM wait := (6, 0) (7, 1) (8, 0);
	METHOD : COG;
	DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' and 'max' for 'or'
	ACT : MIN;
	ACCU : MAX;
	
	RULE 1 : IF distance IS close AND actionPoints IS high THEN priority IS high;
	RULE 2 : IF distance IS medium AND actionPoints IS high THEN priority IS medium;
	RULE 3 : IF distance IS far AND actionPoints IS high THEN priority IS low;
	RULE 4 : IF (distance IS close) AND (actionPoints IS low) THEN priority IS wait;
	RULE 5 : IF (distance IS medium) AND (actionPoints IS low) THEN priority IS wait;
	RULE 6 : IF (distance IS far) AND (actionPoints IS low) THEN priority IS wait;
END_RULEBLOCK

END_FUNCTION_BLOCK